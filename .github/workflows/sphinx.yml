# This is a basic workflow to help you get started with Actions

name: sphinx

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      # https://docs.github.com/en/actions/guides/building-and-testing-python#caching-dependencies
      # ^-- How to set up caching for pip on Ubuntu
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      # https://docs.github.com/en/actions/guides/building-and-testing-python#installing-dependencies
      # ^-- This gives info on installing dependencies with pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build docs
        run: |
          cd docs
          make html
          cd ../
          
      - name: Commit chantes to gh-pages
        run: |
        
          # Copies documentation outside of git folder.  
          mkdir -p ../docs/html 
          mv docs/build/html/* ../docs/.
          
          # Checks out to gh-pages branch.
          git fetch
          git checkout gh-pages
          
          # Copies files to branch.
          mv ../docs .
          cd docs
          
          # Sets up no Jekyll config.
          touch .nojekyll
          
          # Commits the changes.
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Documentation update." -a || true

      # Deploy
      # https://github.com/peaceiris/actions-gh-pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name == 'push' }}
        #if: ${{ success() && github.event_name == 'push' && github.ref == 'refs/heads/$defaultBranch' }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _gh-pages/
          force_orphan: true
